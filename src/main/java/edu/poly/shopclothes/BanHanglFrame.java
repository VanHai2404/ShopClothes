/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package edu.poly.shopclothes;

import edu.poly.shopclothes.dao.DanhMucDao;
import edu.poly.shopclothes.dao.HoaDonCTDao;
import edu.poly.shopclothes.dao.HoaDonDao;
import edu.poly.shopclothes.dao.KhachHangDao;
import edu.poly.shopclothes.dao.NhanVienDao;
import edu.poly.shopclothes.dao.SanPhamDao;
import edu.poly.shopclothes.entity.DanhMucSP;
import edu.poly.shopclothes.entity.HoaDon;
import edu.poly.shopclothes.entity.HoaDonCT;
import edu.poly.shopclothes.entity.KhachHang;
import edu.poly.shopclothes.entity.SanPham;
import edu.poly.shopclothes.helper.DiaLogHelper;
import edu.poly.shopclothes.helper.MsgBox;
import edu.poly.shopclothes.helper.ShereHelper;
import edu.poly.shopclothes.helper.Validate;
import edu.poly.shopclothes.helper.XDate;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.geom.Arc2D;
import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.text.SimpleDateFormat;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

/**
 *
 * @author pc
 */
public class BanHanglFrame extends javax.swing.JInternalFrame {

    SanPhamDao spdao = new SanPhamDao();
    HoaDonCTDao ctDao = new HoaDonCTDao();
    KhachHangDao khDao = new KhachHangDao();
    NhanVienDao nvDao = new NhanVienDao();
    HoaDonDao hdDao = new HoaDonDao();
    DanhMucDao dmDao = new DanhMucDao();
    int index = 0;

    /**
     * Creates new form BanHanglFrame
     */
    public BanHanglFrame() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        initTable();
        initTable2();
        fillTable();
        fillComboxCustomer();
        fillComBoxLoaiSP();

    }

    public void fillComboxCustomer() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhachHang.getModel();
        cboKhachHang.removeAllItems();
        List<KhachHang> list = khDao.selectAll();
        for (KhachHang s : list) {
            model.addElement(s);
        }

    }

    private void initTable() {
        DefaultTableModel mode = new DefaultTableModel();
        mode.setRowCount(0);
        mode.setColumnIdentifiers(new String[]{"Mã SP", "Tên SP", "Số Lượng", "Giá Bán"});
        tblDonHang.setModel(mode);
        lblMaHD.setText("");
    }

    private void initTable2() {
        DefaultTableModel mode = new DefaultTableModel();
        mode.setRowCount(0);
        mode.setColumnIdentifiers(new String[]{"Mã SP", "Tên SP", "Số Lượng", "Giá Bán", "Chất Liệu", "Trang Thái"});
        tblSanPham.setModel(mode);

    }

    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        List<SanPham> list = spdao.selectAll();
        for (SanPham sp : list) {
            Object row[] = {sp.getMaSP(), sp.getTenSP(), sp.getSoLuong(), sp.getGiaBan(), sp.getChatLieu(), sp.getTrangThai()};
            model.addRow(row);

        }

    }

    private void fillTable2() {
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        model.setRowCount(0);
        List<HoaDonCT> list = ctDao.selectAll();
        for (HoaDonCT hdct : list) {
            Object row[] = {hdct.getMAHD(), hdct.getMaSP(), hdct.getSoLuong(), hdct.getGiaTien()};
            model.addRow(row);

        }

    }

    public String deleteLastKey(String str) {
        if (str.charAt(str.length() - 1) == 'đ') {
            str = str.replace(str.substring(str.length() - 1), "");
            return str;
        } else {
            return str;
        }
    }

    public String fomartFloat(String txt) {
        String pattern = deleteLastKey(txt);
        return pattern = pattern.replaceAll(",", "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblTienKhachDua = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        txtTienKhachDua = new javax.swing.JTextField();
        lblMaHD = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cboHinhTT = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        cboKhachHang = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        lblThanhToan = new javax.swing.JLabel();
        txtTienThua = new javax.swing.JTextField();
        btnTinhTien = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonHang = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnXacNhan = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtTiemKiem = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cboDanhMuc = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();

        jLabel13.setBackground(new java.awt.Color(255, 153, 0));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 153, 0));
        jLabel13.setText("00.000VND");

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1095, 715));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Đơn Hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Thanh Toán : ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 90, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Mã Hóa Đơn  :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 90, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Tổng Tiền :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 90, 20));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Giám Giá : ");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 90, 20));

        lblTienKhachDua.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTienKhachDua.setText("Tiền Khách Đưa : ");
        jPanel1.add(lblTienKhachDua, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 100, 20));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Ghi Chú ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 90, 20));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Tiền Thừa : ");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 80, 20));

        jButton4.setBackground(new java.awt.Color(255, 153, 51));
        jButton4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jButton4.setText("THANH TOÁN");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 627, 334, 45));

        jButton5.setBackground(new java.awt.Color(255, 153, 51));
        jButton5.setText("LÀM MỚI");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 595, 135, -1));

        jButton6.setBackground(new java.awt.Color(255, 153, 51));
        jButton6.setText("HỦY HÓA ĐƠN");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 595, 132, -1));
        jPanel1.add(txtTienKhachDua, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, 170, -1));

        lblMaHD.setBackground(new java.awt.Color(255, 153, 0));
        lblMaHD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblMaHD.setForeground(new java.awt.Color(255, 153, 0));
        lblMaHD.setText("HD0023");
        jPanel1.add(lblMaHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 110, 20));

        lblTongTien.setBackground(new java.awt.Color(255, 153, 0));
        lblTongTien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(255, 153, 0));
        lblTongTien.setText("00.000VND");
        jPanel1.add(lblTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 181, 20));

        jLabel15.setBackground(new java.awt.Color(255, 153, 0));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 153, 0));
        jLabel15.setText("5%");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 181, 20));

        cboHinhTT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền Mặt", "Quét thẻ" }));
        jPanel1.add(cboHinhTT, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, 170, -1));

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane3.setViewportView(txtGhiChu);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, 250, 100));

        cboKhachHang.setForeground(new java.awt.Color(204, 204, 204));
        cboKhachHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tên Khách Hàng" }));
        cboKhachHang.setToolTipText("Tên Khách Hàng");
        cboKhachHang.setAutoscrolls(true);
        cboKhachHang.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        cboKhachHang.setName("Tên Khách Hàng"); // NOI18N
        cboKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhachHangActionPerformed(evt);
            }
        });
        jPanel1.add(cboKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 320, 30));
        cboKhachHang.getAccessibleContext().setAccessibleName("Tên Khách hàng");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Hình Thức Thanh Toán ");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 130, 20));

        lblThanhToan.setBackground(new java.awt.Color(255, 153, 0));
        lblThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThanhToan.setForeground(new java.awt.Color(255, 153, 0));
        lblThanhToan.setText("00.000VND");
        jPanel1.add(lblThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 170, 20));

        txtTienThua.setEditable(false);
        txtTienThua.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(txtTienThua, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, 170, 30));

        btnTinhTien.setText("+");
        btnTinhTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinhTienActionPerformed(evt);
            }
        });
        jPanel1.add(btnTinhTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 320, -1, -1));

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, 380, 690));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Đơn Hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel3.setToolTipText("");
        jPanel3.setName(""); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDonHang.setGridColor(new java.awt.Color(255, 153, 0));
        tblDonHang.setSelectionBackground(new java.awt.Color(255, 153, 51));
        jScrollPane1.setViewportView(tblDonHang);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 510, 250));

        jButton1.setBackground(new java.awt.Color(255, 153, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Xóa Tất Cả");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 80, 130, 30));

        jButton3.setBackground(new java.awt.Color(255, 153, 51));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("Xóa Sản Phẩm");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, 130, 30));

        btnXacNhan.setBackground(new java.awt.Color(153, 255, 255));
        btnXacNhan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXacNhan.setText("Xác Nhận ");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });
        jPanel3.add(btnXacNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 210, -1, -1));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 300));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sản Phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(txtTiemKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 200, 30));

        jButton2.setBackground(new java.awt.Color(255, 153, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("Tìm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Danh Mục");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 90, 20));

        cboDanhMuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quần Dài", "Áo Sơ Mi", " " }));
        cboDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDanhMucActionPerformed(evt);
            }
        });
        jPanel4.add(cboDanhMuc, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 190, 30));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSanPham.setGridColor(new java.awt.Color(255, 153, 0));
        tblSanPham.setSelectionBackground(new java.awt.Color(255, 153, 51));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 690, 280));

        jButton7.setBackground(new java.awt.Color(255, 153, 51));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton7.setText("Tìm");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 50, -1, -1));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 710, 390));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDanhMucActionPerformed
        // TODO add your handling code here:
        // this.TimKiemID_DanhMuc();
    }//GEN-LAST:event_cboDanhMucActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        if (evt.getClickCount() == 1) {

            this.index = tblSanPham.rowAtPoint(evt.getPoint());
            this.chonSanPham();
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.insertHoaDon();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // TODO add your handling code here:
        this.XacNhanTT();

    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnTinhTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinhTienActionPerformed
        if (txtTienKhachDua.getText().length() == 0) {
            DiaLogHelper.alert(this, "Bạn Phải nhập tiền khách đứa !!");

        } else {
            float tienkhachtra = Float.valueOf(txtTienKhachDua.getText().toString());
            float tienThua = tienkhachtra - ThanhToan();
            txtTienThua.setText(tienThua + "VNĐ");
        }

    }//GEN-LAST:event_btnTinhTienActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:\
        this.delete();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.TimKiemTen();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        model.setRowCount(0);
        list.clear();
        JOptionPane.showMessageDialog(this, "Hóa Đơn Đã Đc Hủy !!");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void cboKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhachHangActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_cboKhachHangActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        txtGhiChu.setText("");
        txtTienKhachDua.setText("");
        txtTienThua.setText("");
        lblTongTien.setText("");
        lblMaHD.setText("");
        lblThanhToan.setText("");

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTinhTien;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JComboBox<String> cboDanhMuc;
    private javax.swing.JComboBox<String> cboHinhTT;
    private javax.swing.JComboBox<String> cboKhachHang;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblThanhToan;
    private javax.swing.JLabel lblTienKhachDua;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JTable tblDonHang;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtTiemKiem;
    private javax.swing.JTextField txtTienKhachDua;
    private javax.swing.JTextField txtTienThua;
    // End of variables declaration//GEN-END:variables

    List<HoaDonCT> list = new ArrayList<>();
//    void  chonSanPham() {
// List<NguoiHoc> list = dao.selectAll();
//           for (NguoiHoc nh : list) {
//        Integer masp = (Integer) tblSanPham.getValueAt(this.index, 0);
//        SanPham sanPham = spdao.selectById(masp);
//        //spdao.update(sanPham);     
//        int SL = sanPham.getSoLuong(); // lấy số lượng sản phẩm 
//        String SLChon = JOptionPane.showInputDialog("Số Lượng");
//        int soLuong = Integer.parseInt(SLChon);
//        int SoLuongSP = SL - soLuong;
//        if (SoLuongSP >= 0) {
//            spdao.UpdateSL(SoLuongSP, masp);
//            DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
//            model.setRowCount(0);
//            
//            Object row[] = {sanPham.getMaSP(), sanPham.getTenSP(), soLuong, sanPham.getGiaBan()};
//            model.addRow(row);   
//            
//            
//            fillTable();
//        } else {
//            DiaLogHelper.alert(this, "Số Lượng Bạn chọn Vượt Mức !!");
//        }
//
//    }

    public SanPham getUpdate() {
        SanPham sp = new SanPham();
        Integer masp = (Integer) tblSanPham.getValueAt(this.index, 0);
        SanPham sanPham = spdao.selectById(masp);
        sp.setMaSP(masp);
        sp.setTenSP(sanPham.getTenSP());
        //   sp.setSoLuong(Integer.valueOf(txtSoLuong .getText()));
        sp.setSize(sanPham.getSize());
        sp.setNhaSanXuat(sanPham.getNhaSanXuat());
        sp.setHinh(sanPham.getHinh());
        sp.setGiaNhap(Float.valueOf(sanPham.getGiaNhap()));
        sp.setGiaBan(Float.valueOf(sanPham.getGiaBan()));
        sp.setChatLieu(sanPham.getChatLieu());
        sp.setMoTa(sanPham.getMoTa());
        sp.setTrangThai(sanPham.getTrangThai());

        // DanhMucSP danhmuc = (DanhMucSP) cboSanPham.getSelectedItem();
        sp.setID_DanhMuc(sanPham.getID_DanhMuc());
        return sp;

    }

    void chonSanPham() {

        String SLChon = JOptionPane.showInputDialog("Số Lượng");
        System.out.println("Input : " + SLChon);

        if (SLChon == null) {
            DiaLogHelper.alert(this, "Bạn Ko Chọn !!");
            return;
        } else {

            int soLuong = Integer.parseInt(SLChon);

            if (soLuong < 0) {
                DiaLogHelper.alert(this, "Số lượng ko hơp lệ !!");
                return;

            } else {
                int row = tblSanPham.getSelectedRow();
                if (soLuong > (int) tblSanPham.getValueAt(row, 2)) {
                    DiaLogHelper.alert(this, "Số Lượng bán Hơn số lượng trong kho");
                    return;
                } else {
                    int MaSp = (int) tblSanPham.getValueAt(row, 0);
                    String TenSP = (String) tblSanPham.getValueAt(row, 1);
                    int SoLuongSP = soLuong;
                    float giaBan = Float.parseFloat(tblSanPham.getValueAt(row, 3).toString());
//                hv.setDiem(Double.parseDouble(tblHocVien.getValueAt(i,4).toString()));

                    DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
                    model.addRow(new Object[]{MaSp, TenSP, SoLuongSP, giaBan + " đ"});

                    HoaDonCT hdct = new HoaDonCT();
                    hdct.setMaSP(MaSp);
                    hdct.setGiaTien(giaBan);
                    hdct.setSoLuong(SoLuongSP);
                    hdct.setTenSP(TenSP);
                    list.add(hdct);

                    int i = ((int) tblSanPham.getValueAt(row, 2)) - SoLuongSP;
                    tblSanPham.setValueAt(i, row, 2);
                    System.out.println(i);

                }
            }
        }

    }

//    public float TienThua() {
//        float tienkhachtra = Float.valueOf(txtTienKhachDua.getText().toString());
//        float tienThua = (float) (ThanhToan() - tienkhachtra);
//        return tienThua;
//    }
    public float ThanhToan() {
        float thanhToan = (float) (TongGia() - (0.05 * TongGia()));
        return thanhToan;

    }

    public float TongGia() {
        float price = 0;
        int inde = tblDonHang.getRowCount();

        for (int i = 0; i < inde; i++) {

            price += Float.parseFloat(fomartFloat((String) tblDonHang.getValueAt(i, 3))) * (int) tblDonHang.getValueAt(i, 2);
        }
        return price;
    }

    public int SL() {
        int SL = 0;
        int inde = tblDonHang.getRowCount();

        for (int i = 0; i < inde; i++) {

            SL += (int) tblDonHang.getValueAt(i, 2);
        }
        return SL;
    }

    public void UpdateSLSanPham() {

        int inde = tblSanPham.getRowCount();

        for (int i = 0; i < inde; i++) {
            int MaSp = (int) tblSanPham.getValueAt(i, 0);
            SanPham sp = spdao.selectById(MaSp);
            sp.setSoLuong(Integer.parseInt(tblSanPham.getValueAt(i, 2).toString()));
            spdao.update(sp);

        }
        DiaLogHelper.alert(this, "Cập Nhât Thành công !! ");

    }

//          void updateDiem() {
//        for (int i = 0; i < tblHocVien.getRowCount(); i++) {
//
//            int mahv = (Integer) tblHocVien.getValueAt(i, 1);
//            HocVien hv = hvdao.selectById(mahv);
//          //  hv.setDiem((Double) tblHocVien.getValueAt(i, 4));
//          hv.setDiem(Double.parseDouble(tblHocVien.getValueAt(i,4).toString()));
//            hvdao.update(hv);
//
//        }
//
//        DiaLogHelper.alert(this, "Cập nhật Điểm Thành Công !!! ");
//    }
//    public float TienThua() {
//        float tienThua = 0;
//        float tienkhachDua = Float.parseFloat(txtTienKhachDua.getText().toString());
//      //  in.setMoneyCustomer(Double.parseDouble(txtMoneyCustomer.getText()));
//        tienThua = tienkhachDua - TongGia();
//        return tienThua;
//    }
    HoaDon getHoaDon() {
        HoaDon in = new HoaDon();
//MANV,SOLUONG,MAKH,TONGTIEN,TIENKHACHTRA,TIENTHUA,HINHTHUCTT,GHICHU,NGAYLAP
        java.util.Date date = new java.util.Date();
        in.setNgayLap(date);
        in.setMaNV(ShereHelper.USER.getMaNV());
        in.setTienKhachTra(Float.valueOf(txtTienKhachDua.getText()));
        in.setTongTien(TongGia());
        in.setGhiChu(txtGhiChu.getText());

        in.setSoLuong(SL());
        String HinhThucTT = (String) cboHinhTT.getSelectedItem();
        in.setHinhThucTT(HinhThucTT);
        in.setTienThua(Float.valueOf(txtTienKhachDua.getText()) - ThanhToan());
        KhachHang kh = (KhachHang) cboKhachHang.getSelectedItem();
        in.setMaKH(kh.getMaKH());

        return in;

    }

    public void insertHoaDon() {

        int count = tblDonHang.getRowCount();
        if (count <= 0) {
            DiaLogHelper.alert(this, "Bạn Chưa chọn sản phẩm nào !! ");
        } else {
            if (!Validate.checkEmpty(lblTienKhachDua, txtTienKhachDua, "Không bỏ trống tiền khách đưa")) {

                return;
            } else if (!Validate.checkNumber(lblTienKhachDua, txtTienKhachDua, "Tiền Không họp lệ")) {
                return;
            } else if (Float.valueOf(txtTienKhachDua.getText().toString()) - Float.valueOf(ThanhToan()) < 0) {
                DiaLogHelper.alert(this, "Nhập lại tiền khách đừa ??? ");
                return;
            } else {
                HoaDon hd = getHoaDon();
                hdDao.insert(hd);
                int row = tblDonHang.getRowCount();
                for (int i = 0; i < list.size(); i++) {

                    HoaDonCT ct = list.get(i);
                    System.out.println(ct.getSoLuong());
                    ctDao.insert(ct);

                }
                hd.setTongTien(TongGia());
                DiaLogHelper.alert(this, "Bán " + list.size() + " Loại Sản Phẩm thành công thành công !!");

            }
            this.XuatHoaDonPDF();
            DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
            model.setRowCount(0);
            list.clear();

        }
    }

    public void delete() {
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        int row = tblSanPham.getSelectedRow();
        int row2 = tblDonHang.getSelectedRow();

//         List<DetailInvoiceSell> list = new ArrayList<>();
        if (tblDonHang.getSelectedRowCount() == 1) {
            for (int i = 0; i < tblSanPham.getRowCount(); i++) {
                if (tblSanPham.getValueAt(i, 0).equals(tblDonHang.getValueAt(row2, 0))) {
                    int ii = (int) tblSanPham.getValueAt(i, 2) + (int) tblDonHang.getValueAt(row2, 2);
                    tblSanPham.setValueAt(ii, i, 2);
                    System.out.println("okooooo" + ii);
                }
            }
            for (int j = 0; j < list.size(); j++) {
                if (list.get(j).getMaSP() == (int) tblDonHang.getValueAt(row2, 0)) {
                    model.removeRow(tblDonHang.getSelectedRow());
                    list.remove(list.get(j));
                    return;
                }
            }
        }

    }

    private void XacNhanTT() {
        int count = tblDonHang.getRowCount();
        if (count <= 0) {
            MsgBox.alert(this, "Giỏ hàng trống bạn cần chọn sản phẩm bỏ vào !! ");
        } else {
            lblTongTien.setText(TongGia() + "VND");
            lblThanhToan.setText(ThanhToan() + "VND");
            for (int i = 0; i < count; i++) {
                int MaSp = Integer.valueOf(tblSanPham.getValueAt(i, 0).toString());
                String ten = (String) tblDonHang.getValueAt(i, 1);

                Integer SL = Integer.valueOf(tblDonHang.getValueAt(i, 2).toString());
                float dongia = Float.parseFloat(fomartFloat((String) tblDonHang.getValueAt(i, 3)));
                //  float dongia =Float.valueOf(tblDonHang.getValueAt(i, 3).toString());
                //     String TenSP = (String) tblSanPham.getValueAt(row, 1);
                System.out.println("Mã :" + MaSp);
                System.out.println("Ten :" + ten);
                System.out.println("SoLuong :" + SL);
                System.out.println("DonGia :" + dongia);

            }
            lblMaHD.setText("HD0023");
        }

    }

    private void fillComBoxLoaiSP() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboDanhMuc.getModel();
        model.removeAllElements();
        List<DanhMucSP> list = dmDao.selectAll();
        for (DanhMucSP sp : list) {
            model.addElement(sp);

        }

    }

    private void TimKiemTen() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        String TenSP = txtTiemKiem.getText();
        List<SanPham> list = spdao.TimKiemSP(TenSP);
        for (SanPham sp : list) {
            Object row[] = {sp.getMaSP(), sp.getTenSP(), sp.getSoLuong(), sp.getGiaBan(), sp.getChatLieu(), sp.getTrangThai()};
            model.addRow(row);
        }

    }

    private void TimKiemID_DanhMuc() {
        int ro = tblSanPham.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);

        int danhmuc = (int) cboDanhMuc.getSelectedIndex();
        /// int idDM = danhmuc.getID_DanhMuc();
        List<SanPham> list = spdao.TimkiemTheoID_DanhMuc(danhmuc);

        for (SanPham sp : list) {
            Object row[] = {sp.getMaSP(), sp.getTenSP(), sp.getSoLuong(), sp.getGiaBan(), sp.getChatLieu(), sp.getTrangThai()};
            model.addRow(row);
        }

    }

    void XuatHoaDonPDF() {
        JFrame frame = new JFrame("In Hóa Đơn Bán Hàng");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Container cp = frame.getContentPane();
        JTextPane pane = new JTextPane();

        SimpleAttributeSet attributeSet = new SimpleAttributeSet();
        //    StyleConstants.setBold(attributeSet, true);
        StyleConstants.setFontSize(attributeSet, 13);
        Date dd = new Date();
        SimpleDateFormat datef = new SimpleDateFormat("MM/dd/yyyy");
        SimpleDateFormat timef = new SimpleDateFormat("hh:mm:ss");
        String date = datef.format(dd);
        String time = timef.format(dd);
        // set the 
        pane.setCharacterAttributes(attributeSet, true);
        // nội dung JtextPane
        pane.setText("\t      HÓA ĐƠN BÁN HÀNG SHOP IT_CLOTHES\n");
        pane.setText(pane.getText() + "                                          SHOP BÁN QUẦN ÁO \n");
        pane.setText(pane.getText() + "                                                  VĂN HẢI  \n");
        pane.setText(pane.getText() + "                                                0395185435\n");
        pane.setText(pane.getText() + "\t\t\t   " + " TP_Đà Nẵng Ngày: " + date + "\n\n");

        pane.setText(pane.getText() + " Mã HD:          \t" + "HD023" + "\n");
        pane.setText(pane.getText() + " Tên Nhân Viên : \t" + ShereHelper.USER.getHoTen() + "\n");

        pane.setText(pane.getText() + "-------------------------------------------------------------------------------------------------------------\n");
        pane.setText(pane.getText() + " Tên SP\t\t Số Lượng\t\t Giá SP \n  ");
        pane.setText(pane.getText() + "-------------------------------------------------------------------------------------------------------------\n");
        int line = tblDonHang.getRowCount();
        for (int i = 0; i < line; i++) {
            String TenSp = tblDonHang.getValueAt(i, 1).toString();
            String SoLuong = tblDonHang.getValueAt(i, 2).toString();
            String GiaSP = tblDonHang.getValueAt(i, 3).toString();

            pane.setText(pane.getText() + TenSp + " \t" + SoLuong + "\t\t" + GiaSP + "\n");
        }

        // string masp = =tblhoadon.getValueAt(i,0).toString();//
        String variable = cboKhachHang.getSelectedItem().toString();
        System.out.println("Ten KH : " + variable);

        pane.setText(pane.getText() + "------------------------------------------------------------------------------------------------------------\n");
        pane.setText(pane.getText() + " Tổng Tiền :                                  \t\t" + Float.valueOf(TongGia()) + "00 VNĐ" + "\n");
        pane.setText(pane.getText() + " Giá Gia   :                                  \t\t" + "9" + "00 VNĐ" + "\n");
        pane.setText(pane.getText() + " Tên Khách Hàng :                                          \t" + variable + "\n");
        pane.setText(pane.getText() + "==============================================================\n");
        pane.setText(pane.getText() + " Thành Toàn :                                             \t" + Float.valueOf(ThanhToan()) + "00 VNĐ" + "\n");

        pane.setText(pane.getText() + "-----------------------------------------------------------------------------------------------------------\n");

        pane.setText(pane.getText() + "Ngày mua : " + date + "\t\t" + "Thời Gian : " + time + "\n");
        pane.setText(pane.getText() + "*********************************************************************************************\n");
        pane.setText(pane.getText() + "\t  Cảm ơn quý khách, Chúc quý khách một ngày tốt đẹp !!  \n");
        pane.setText(pane.getText() + "*********************************************************************************************\n\n");
        pane.setText(pane.getText() + "                                    Email : " + " hovanhai24042003@gmail.com \n");
        pane.setText(pane.getText() + "                                                   SDT : " + " 0395186435 \n");
        pane.setText(pane.getText() + "              Địa Chỉ: " + "122 Nguyễn Thi Thập- Quần Liên Chiếu -TP_Đà Nẵng \n");

        attributeSet = new SimpleAttributeSet();
        StyleConstants.setItalic(attributeSet, true);
        StyleConstants.setForeground(attributeSet, Color.black);
        StyleConstants.setBackground(attributeSet, Color.YELLOW);

//        Document doc = pane.getStyledDocument();
//        try {
//            doc.insertString(doc.getLength(), "\t Shop văn hải cảm ơn quý khách đã ủng hộ sản phẩm của chúng tôi \t   ", attributeSet);
//
//        } catch (BadLocationException ex) {
//            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
        // attributeSet = new SimpleAttributeSet();
        // doc.insertString(doc.getLength(), "wold", attributeSet);
        JScrollPane scrollPane = new JScrollPane(pane);
        cp.add(scrollPane, BorderLayout.CENTER);

        frame.setSize(500, 700);
        frame.setVisible(true);

        frame.setLocationRelativeTo(null);

        if (DiaLogHelper.showConfirmDialog(this, "Bạn Có Muốn In Hóa Đơn Ko ?", "Trả Lời") == JOptionPane.NO_OPTION) {
            return;
        } else {
            try {
                pane.print();
            } catch (Exception e) {
            }

        }

    }

    void xuathoadon() {

        int line = tblDonHang.getRowCount();
        try {
            String TenPile = JOptionPane.showInputDialog("TenFile");
            Writer bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("E://Du_An_1(UDPM_Java)//" + TenPile + ".txt"), "UTF-8"));
            bw.write("\t\t\t    IT_ShopClothes   \r\n\r\n");
            bw.write("\t\t\t Phần mềm bán quần áo, Q.11, TP_ĐN   \r\n");
            bw.write("\t\t\t      SĐT: 0395186435        \r\n\r\n");
            bw.write("\t\t\t    HÓA ĐƠN BÁN HÀNG         \r\n\r\n");
            bw.write("Mã Hóa Đon: " + "12" + "\r\n");
            bw.write("NHÂN VIÊN: " + "Văn hải" + "\r\n");
            bw.write("----------------------------------------------------------------\r\n");
            bw.write("Mã SP \t\t Tên SP \t Số lượng \t Đơn Giá \r\n");
            bw.write("----------------------------------------------------------------\r\n");
            //Ghi sản phẩm
//            int quantotal = 0;
            for (int i = 0; i < line; i++) {
                int ma = (int) tblDonHang.getValueAt(i, 0);
                String ten = (String) tblDonHang.getValueAt(i, 1);
                float soluong = (float) tblDonHang.getValueAt(i, 2);
                float dongia = (float) tblDonHang.getValueAt(i, 3);

                bw.write(ma + "\t" + ten + "\t\t" + soluong + "\t" + dongia + "\r\n\r\n");
            }
            bw.write("-----------------------------------------------------------------------\r\n");
            bw.write("Tổng cộng:\t\t" + "" + "\t\t\t" + Float.valueOf(TongGia()) + " VNĐ\r\n");
            bw.write("\t\t--------------------------------------------\r\n");
            bw.write("\t\tThành tiền:\t\t\t" + Float.valueOf(ThanhToan()) + " VNĐ\r\n");
            bw.write("\t\t--------------------------------------------\r\n");
            bw.write("\t\tTiền khách đưa:\t\t\t" + txtTienKhachDua.getText() + " VNĐ\r\n");
            bw.write("\t\tTiền trả lại:\t\t\t" + txtTienThua.getText() + " VNĐ\r\n");
            bw.write("------------------------------------------------------------\r\n");
            bw.write("------------------------------------------------------------\r\n");
            bw.write("Mật khẩu Wifi:IT_Shop_Cloths\r\n");
            bw.write("---------------------CÁM ƠN QUÝ KHÁCH!----------------------");
            bw.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        //     Runtime run = Runtime.getRuntime();
//        try {
////            run.exec("notepad History//" + "E://Du_An_1(UDPM_Java)//" + "Hóa Đơn IT_ShopClothes" + ".txt");
//        } catch (IOException e) {
//
//        }
    }

}
